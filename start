#!/bin/bash

if [ "${BASH_SOURCE-}" = "$0" ]; then
    echo "You must source this script: \$ source $0" >&2
    exit 33
fi


SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

source $SCRIPT_DIR/settings.sh

chmod u+x -R .

function defaultsettings {
    cp -f $SCRIPT_DIR/defaultsettings.sh $SCRIPT_DIR/settings.sh
    echo "settings.sh replaced by defaultsettings.sh"
}

function testgame {
    if [ $# -ne 1 ] ; then
        echo "Parameters: linux or windows."
        return
    fi
    if [ $1 == "linux" ] ; then
        ( cd $TESTBUILDFOLDER/$TESTBUILDNAME-$1/ ; ./OneLife )
    elif [ $1 == "windows"] ; then
        ( cd $TESTBUILDFOLDER/$TESTBUILDNAME-$1/ ; OneLife.exe )
    fi
}
function testserver {
    if [ $# -ne 1 ] ; then
        echo "Parameters: linux or windows."
        return
    fi
    if [ $1 == "linux" ] ; then
        ( cd $TESTBUILDFOLDER/$TESTBUILDNAME-$1/ ; ./OneLifeServer )
    elif [ $1 == "windows"] ; then
        (cd $TESTBUILDFOLDER/$TESTBUILDNAME-$1/ ; OneLifeServer.exe )
    fi
}
function runtest {
    $SCRIPT_DIR/scripts/makeTestBuild.sh $TARGETSYSTEM
    testgame $TARGETSYSTEM & testserver $TARGETSYSTEM
}
function makegame {
    ( cd $GAMEDIR/gameSource ; make )
}
function makeeditor {
    ( cd $GAMEDIR/gameSource ; ./makeEditor.sh )
}
function makeserver {
    ( cd $GAMEDIR/server ; make )
}
function makeall {
    makegame
    makeeditor
    makeserver
}


function xla {
    # Update TIMESTAMP everytime we want to run a script
    export TIMESTAMP=$(date '+(%F,%H%M)')
    if [ $# -lt 1 ] ; then
        echo "Usage: xla [SCRIPT_NAME]"
    else
        if find $SCRIPT_DIR/scripts -iname "$1.sh" -exec false {} +
        then
            echo "No script $1 found."
        else
            find $SCRIPT_DIR/scripts -iname "$1.sh" -exec echo -e "Running: {}\n" \; -exec {} ${@:2} \;
        fi
    fi
}

function x-cat {
    find $SCRIPT_DIR/scripts -iname "$1.sh" -exec cat {} \;
    echo
}

function x-cd {
    if [ $# -ne 1 ] ; then
        echo "Parameters: assistant, scripts, minorgems, onelife or onelifedata"
        return
    fi
    if [ $1 == "assistant" ] ; then
        cd $ASSISTANTDIR
    elif [ $1 == "scripts" ] ; then
        cd $ASSISTANTDIR/scripts
    elif [ $1 == "minorgems" ] ; then
        cd $MINORDIR
    elif [ $1 == "onelife" ] ; then
        cd $GAMEDIR
    elif [ $1 == "onelifedata" ] ; then
        cd $DATADIR
    fi
}

function x-reload {
    source $SCRIPT_DIR/start
}


echo
echo -e "The following functions can be used:\n"
#declare -F | awk '{print $NF}' | sort | egrep -v "^_"
echo -e "customsettings\ndefaultsettings\nmakeall\nmakeeditor\nmakegame\nmakeserver\nruntest\nsetsetting\ntestgame\ntestserver\nx-cat\nx-cd\nx-reload\nxla"

echo
echo -e "The following scripts are avaliable:\n"
find $SCRIPT_DIR/scripts -type f -exec basename -s .sh {} \;

echo
echo "You can use the xla function to run scripts above."

echo


